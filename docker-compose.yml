
services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: way-esports-api
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    depends_on:
      - mongo
    restart: unless-stopped

  web:
    build:
      context: ./way-esports-front/frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://reverse-proxy/api
    container_name: way-esports-web
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  reverse-proxy:
    image: nginx:stable-alpine
    container_name: way-esports-reverse-proxy
    volumes:
      - ./nginx/reverse-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - web
      - api
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  mongo:
    image: mongo:7
    container_name: way-esports-mongo
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

volumes:
  mongo_data:
