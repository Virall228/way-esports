version: "3.9"

services:
  backend:
    build:
      context: ./way-esports-backend
      dockerfile: Dockerfile
    image: ghcr.io/virall228/way-esports-backend:latest
    env_file:
      - ./way-esports-backend/.env
    ports:
      - "4000:4000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:4000/health"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 20s
    depends_on:
      - mongo
      - redis
    networks:
      - way-esports-network

  frontend:
    build:
      context: ./way-esports/frontend
      dockerfile: Dockerfile
    image: ghcr.io/virall228/way-esports-frontend:latest
    ports:
      - "3000:3000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
      - way-esports-network

  mongo:
    image: mongo:6
    container_name: way-esports-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - way-esports-network

  redis:
    image: redis:7-alpine
    container_name: way-esports-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - way-esports-network

  watchtower:
    image: containrrr/watchtower:latest
    container_name: way-esports-watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
    command: --interval 60 --cleanup --label-enable --include-stopped --revive-stopped
    networks:
      - way-esports-network

volumes:
  mongo_data:
  redis_data:

networks:
  way-esports-network:
    driver: bridge
