version: "3.8"

services:
  backend:
    image: ghcr.io/virall228/way-esports/backend:latest
    env_file:
      - ./.env.prod
    ports:
      - "4000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      - postgres
      - redis
    networks:
      - way-esports-network

  frontend:
    build:
      context: ./way-esports-front/frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - way-esports-network

  postgres:
    image: postgres:15
    container_name: way-esports-postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=wayesports
      - POSTGRES_USER=wayuser
      - POSTGRES_PASSWORD=waypass
    networks:
      - way-esports-network

  redis:
    image: redis:7-alpine
    container_name: way-esports-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - way-esports-network

  watchtower:
    image: containrrr/watchtower:latest
    container_name: way-esports-watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
    command: --interval 60 --cleanup --label-enable --include-stopped --revive-stopped
    networks:
      - way-esports-network

volumes:
  redis_data:

networks:
  way-esports-network:
    driver: bridge
